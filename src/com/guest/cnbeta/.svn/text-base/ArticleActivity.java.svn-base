package com.guest.cnbeta;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.view.Window;
import android.webkit.WebSettings;
import android.webkit.WebSettings.LayoutAlgorithm;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.guest.cnbeta.module.Article;
import com.guest.cnbeta.service.ArticleService;
import com.guest.cnbeta.util.Tip;
import com.mobclick.android.MobclickAgent;

public class ArticleActivity extends Activity {
	private ArticleService cbArticleService;
	private Intent intent;
	private Bundle bl;
	private Article article;
	private WebView webView;
	private static final int SYNC_PAGE = 1;
	private static final int CLICK_ON_URL = 2;
	private static final int CLICK_ON_WEBVIEW = 3;

	private RelativeLayout footerLayout;

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.article);

		cbArticleService = new ArticleService(this);
		intent = this.getIntent();
		bl = intent.getExtras();

		article = (Article) bl.getSerializable("article");

		webView = (WebView) findViewById(R.id.WebArtContent);
		WebViewClient client = new WebViewClient() {
			@Override
			public boolean shouldOverrideUrlLoading(WebView view, String url) {
				handler.sendEmptyMessage(CLICK_ON_URL);
				return true;
			}

			@Override
			public void onPageFinished(WebView view, String url) {
				try {
					Thread.sleep(100);
					footerLayout = (RelativeLayout) findViewById(R.id.footer);
					footerLayout.setVisibility(View.VISIBLE);
					footerLayout.setOnTouchListener(new OnTouchListener() {
						@Override
						public boolean onTouch(View v, MotionEvent event) {
							// TODO Auto-generated method stub
							switch (event.getAction()) {
							case MotionEvent.ACTION_DOWN:
								footerLayout
										.setBackgroundDrawable(getResources()
												.getDrawable(
														R.drawable.item_pressed));
								break;

							case MotionEvent.ACTION_UP:
								footerLayout.setBackgroundColor(Color.WHITE);
								Intent intent = new Intent();
								intent.setClass(ArticleActivity.this,
										CommentActivity.class);
								Bundle bundle = new Bundle();
								bundle.putSerializable("article", article);
								intent.putExtras(bundle);
								startActivity(intent);
								overridePendingTransition(R.anim.slide_in_down,
										R.anim.slide_out_up);
								finish();
								break;

							default:
								break;
							}

							return true;
						}
					});
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		};

		webView.setWebViewClient(client);

		WebSettings settings = webView.getSettings();
		settings.setDefaultTextEncodingName("utf-8");
		settings.setCacheMode(WebSettings.LOAD_DEFAULT);
		settings.setLoadsImagesAutomatically(true);
		settings.setLayoutAlgorithm(LayoutAlgorithm.SINGLE_COLUMN);

		TextView textViewTitle = (TextView) findViewById(R.id.TxtArtTitle);
		textViewTitle.setText(article.getTitle());
		try {
			FileInputStream in = this.openFileInput("cache_art_"
					+ article.getId() + ".html");
			in.close();
			webView.loadUrl("file://" + this.getFilesDir() + "/cache_art_"
					+ article.getId() + ".html");
		} catch (FileNotFoundException e) {
			syncArticle();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public void syncArticle() {
		setProgressBarIndeterminateVisibility(true);

		new Thread() {
			@Override
			public void run() {
				if (!article.isContented()) {
					try {
						article = cbArticleService.getMoreDetail(article);
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}

				Message msg = new Message();
				msg.what = SYNC_PAGE;
				handler.sendMessage(msg);
			}
		}.start();
	}

	public boolean onCreateOptionsMenu(Menu menu) {
		super.onCreateOptionsMenu(menu);
		menu.add(0, 1, 0, "查看评论").setIcon(R.drawable.ic_menu_comment);
		menu.add(0, 2, 0, "发表评论").setIcon(R.drawable.ic_menu_post);
		return true;
	}

	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case 1:
			Intent intent = new Intent();
			intent.setClass(ArticleActivity.this, CommentActivity.class);
			Bundle bl = new Bundle();
			bl.putSerializable("article", article);
			intent.putExtras(bl);
			startActivity(intent);
			overridePendingTransition(R.anim.slide_in_down,
					R.anim.slide_out_up);
			finish();
			break;
		case 2:
			Intent intent2 = new Intent();
			intent2.setClass(ArticleActivity.this, PostCommentActivity.class);
			Bundle bl2 = new Bundle();
			bl2.putSerializable("article", article);
			intent2.putExtras(bl2);
			startActivity(intent2);
			break;
		}
		return true;
	}

	private Handler handler = new Handler() {
		public void handleMessage(Message msg) {

			if (msg.what == CLICK_ON_URL) {
				handler.removeMessages(CLICK_ON_WEBVIEW);
			}

			if (msg.what == SYNC_PAGE) {
				// write to sdcard
				try {
					FileOutputStream out = ArticleActivity.this.openFileOutput(
							"cache_art_" + article.getId() + ".html",
							Context.MODE_PRIVATE);
					Tip.d(Integer.toString(article.getId()));
					out.write(article.getContent().getBytes());
					out.flush();
					out.close();
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (NullPointerException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				ArticleActivity.this.webView.loadUrl("file://"
						+ ArticleActivity.this.getFilesDir() + "/cache_art_"
						+ article.getId() + ".html");
				setProgressBarIndeterminateVisibility(false);
			}

		}
	};
	
	public void onResume() {
		super.onResume();
		 MobclickAgent.onResume(this);
	}

	public void onPause() {
		super.onPause();
		 MobclickAgent.onPause(this);
	}
}
