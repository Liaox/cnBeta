package com.guest.cnbeta.module;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.Serializable;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import android.content.Context;

import com.guest.cnbeta.database.AvatarDB;
import com.guest.cnbeta.loadsource.BaseLoadSource;

public class Avatar implements Serializable {

	private static final long serialVersionUID = -3742211519069060609L;
	private int id;
	private String topic;
	private String img;
	private static AvatarDB avatarDB;

	public Avatar(Context context) {
		avatarDB = new AvatarDB(context);
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getTopic() {
		return topic;
	}

	public void setTopic(String topic) {
		this.topic = topic;
	}

	public String getImg() {
		return img;
	}

	public void setImg(String img) {
		this.img = img;
	}

	public String getAvatarImg(Article article) {

		String imgString = avatarDB.getImgByTopic(article.getTopic());

		if (imgString == null) {
			try {
				String html = BaseLoadSource.getUrlHTML(
						new URL("http://www.cnbeta.com/articles/"
								+ Integer.toString(article.getId()) + ".htm"),
						"GB2312");
				String htmlContent = html.substring(
						html.indexOf("<div id=\"news_content\">"),
						html.indexOf("<div class=\"digbox\">"));
				String contentString = htmlContent.replace(
						"<div id=\"news_content\">", "");
				imgString = contentString.substring(contentString
						.indexOf("<img src=\"http://img.cnbeta.com/topics/"),
						contentString.indexOf(" alt"));
				imgString = imgString.replace(
						"<img src=\"http://img.cnbeta.com/topics/", "");
				imgString = imgString.replace("\"", "");
				imgString = imgString.replace(" ", "%20");
			} catch (MalformedURLException e) {
				// TODO Auto-generated catch block
			} catch (IOException e) {
				// TODO Auto-generated catch block
			} catch (Exception e) {
				// TODO Auto-generated catch block
			}

			downloadAvatar(imgString);

			this.setTopic(article.getTopic());
			this.setImg(imgString);
			avatarDB.save(this);
		}

		return imgString;

	}

	public static void downloadAvatar(String avatarImgString) {
		try {

			File file = new File("/sdcard/.cnBeta/" + avatarImgString + ".gif");
			if (!file.exists()) {
				URL url = new URL("http://img.cnbeta.com/topics/"
						+ avatarImgString);
				HttpURLConnection conn = (HttpURLConnection) url
						.openConnection();
				conn.setDoInput(true);
				conn.connect();
				InputStream is = conn.getInputStream();
				FileOutputStream fos = new FileOutputStream(file);
				byte buf[] = new byte[128];
				do {
					int numread = is.read(buf);
					if (numread <= 0) {
						break;
					}
					fos.write(buf, 0, numread);
				} while (true);
				is.close();
			}
		} catch (NullPointerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
